/**
 * generated by Xtext 2.26.0
 */
package io.github.abelgomez.asyncapi.asyncApi.impl;

import io.github.abelgomez.asyncapi.asyncApi.AsyncApiPackage;
import io.github.abelgomez.asyncapi.asyncApi.QoSMetric;
import io.github.abelgomez.asyncapi.asyncApi.QoSMetricType;
import io.github.abelgomez.asyncapi.asyncApi.QoSMetricUnit;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Qo SMetric</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.github.abelgomez.asyncapi.asyncApi.impl.QoSMetricImpl#getMetricType <em>Metric Type</em>}</li>
 *   <li>{@link io.github.abelgomez.asyncapi.asyncApi.impl.QoSMetricImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link io.github.abelgomez.asyncapi.asyncApi.impl.QoSMetricImpl#getUnit <em>Unit</em>}</li>
 *   <li>{@link io.github.abelgomez.asyncapi.asyncApi.impl.QoSMetricImpl#getGroupedByEvent <em>Grouped By Event</em>}</li>
 * </ul>
 *
 * @generated
 */
public class QoSMetricImpl extends AbstractQoSMetricImpl implements QoSMetric
{
  /**
   * The default value of the '{@link #getMetricType() <em>Metric Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMetricType()
   * @generated
   * @ordered
   */
  protected static final QoSMetricType METRIC_TYPE_EDEFAULT = QoSMetricType.AVAILABILITY;

  /**
   * The cached value of the '{@link #getMetricType() <em>Metric Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMetricType()
   * @generated
   * @ordered
   */
  protected QoSMetricType metricType = METRIC_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * The default value of the '{@link #getUnit() <em>Unit</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnit()
   * @generated
   * @ordered
   */
  protected static final QoSMetricUnit UNIT_EDEFAULT = QoSMetricUnit.MILLISECONDS;

  /**
   * The cached value of the '{@link #getUnit() <em>Unit</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnit()
   * @generated
   * @ordered
   */
  protected QoSMetricUnit unit = UNIT_EDEFAULT;

  /**
   * The default value of the '{@link #getGroupedByEvent() <em>Grouped By Event</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGroupedByEvent()
   * @generated
   * @ordered
   */
  protected static final io.github.abelgomez.asyncapi.asyncApi.Boolean GROUPED_BY_EVENT_EDEFAULT = io.github.abelgomez.asyncapi.asyncApi.Boolean._FALSE;

  /**
   * The cached value of the '{@link #getGroupedByEvent() <em>Grouped By Event</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGroupedByEvent()
   * @generated
   * @ordered
   */
  protected io.github.abelgomez.asyncapi.asyncApi.Boolean groupedByEvent = GROUPED_BY_EVENT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected QoSMetricImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AsyncApiPackage.Literals.QO_SMETRIC;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public QoSMetricType getMetricType()
  {
    return metricType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMetricType(QoSMetricType newMetricType)
  {
    QoSMetricType oldMetricType = metricType;
    metricType = newMetricType == null ? METRIC_TYPE_EDEFAULT : newMetricType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AsyncApiPackage.QO_SMETRIC__METRIC_TYPE, oldMetricType, metricType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AsyncApiPackage.QO_SMETRIC__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public QoSMetricUnit getUnit()
  {
    return unit;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUnit(QoSMetricUnit newUnit)
  {
    QoSMetricUnit oldUnit = unit;
    unit = newUnit == null ? UNIT_EDEFAULT : newUnit;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AsyncApiPackage.QO_SMETRIC__UNIT, oldUnit, unit));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public io.github.abelgomez.asyncapi.asyncApi.Boolean getGroupedByEvent()
  {
    return groupedByEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGroupedByEvent(io.github.abelgomez.asyncapi.asyncApi.Boolean newGroupedByEvent)
  {
    io.github.abelgomez.asyncapi.asyncApi.Boolean oldGroupedByEvent = groupedByEvent;
    groupedByEvent = newGroupedByEvent == null ? GROUPED_BY_EVENT_EDEFAULT : newGroupedByEvent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AsyncApiPackage.QO_SMETRIC__GROUPED_BY_EVENT, oldGroupedByEvent, groupedByEvent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AsyncApiPackage.QO_SMETRIC__METRIC_TYPE:
        return getMetricType();
      case AsyncApiPackage.QO_SMETRIC__DESCRIPTION:
        return getDescription();
      case AsyncApiPackage.QO_SMETRIC__UNIT:
        return getUnit();
      case AsyncApiPackage.QO_SMETRIC__GROUPED_BY_EVENT:
        return getGroupedByEvent();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AsyncApiPackage.QO_SMETRIC__METRIC_TYPE:
        setMetricType((QoSMetricType)newValue);
        return;
      case AsyncApiPackage.QO_SMETRIC__DESCRIPTION:
        setDescription((String)newValue);
        return;
      case AsyncApiPackage.QO_SMETRIC__UNIT:
        setUnit((QoSMetricUnit)newValue);
        return;
      case AsyncApiPackage.QO_SMETRIC__GROUPED_BY_EVENT:
        setGroupedByEvent((io.github.abelgomez.asyncapi.asyncApi.Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AsyncApiPackage.QO_SMETRIC__METRIC_TYPE:
        setMetricType(METRIC_TYPE_EDEFAULT);
        return;
      case AsyncApiPackage.QO_SMETRIC__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
      case AsyncApiPackage.QO_SMETRIC__UNIT:
        setUnit(UNIT_EDEFAULT);
        return;
      case AsyncApiPackage.QO_SMETRIC__GROUPED_BY_EVENT:
        setGroupedByEvent(GROUPED_BY_EVENT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AsyncApiPackage.QO_SMETRIC__METRIC_TYPE:
        return metricType != METRIC_TYPE_EDEFAULT;
      case AsyncApiPackage.QO_SMETRIC__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
      case AsyncApiPackage.QO_SMETRIC__UNIT:
        return unit != UNIT_EDEFAULT;
      case AsyncApiPackage.QO_SMETRIC__GROUPED_BY_EVENT:
        return groupedByEvent != GROUPED_BY_EVENT_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (metricType: ");
    result.append(metricType);
    result.append(", description: ");
    result.append(description);
    result.append(", unit: ");
    result.append(unit);
    result.append(", groupedByEvent: ");
    result.append(groupedByEvent);
    result.append(')');
    return result.toString();
  }

} //QoSMetricImpl
